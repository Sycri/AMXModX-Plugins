// Rattler - Use Rattler's tail to create shockwave to deflect weapon damages

/* CVARS

//Rattler
rattler_level 0
rattler_dmgreturn 0.02		//Percentage increase with level, the higher lvl, the more dmg returns.

*/

/*

Version History:

1.0 - First version

2.0 - Removed key down, now it is constant.

2.1 - Fixed minor bugs, polished code thanks to vittu.

*/

#include <superheromod>

//Global Variables
new gHeroID
new const gHeroName[]="Rattler"
new bool:gHasRattler[SH_MAXSLOTS+1]
new gPcvarLevel, gPcvarDmgReturn
new gSpriteLightning
//----------------------------------------------------------------------------------------------
public plugin_init() {
	// Plugin Info
	register_plugin("SUPERHERO Rattler", "2.2","DuPeR/Rockell")

	// DO NOT EDIT THIS FILE TO CHANGE CVARS, USE THE SHCONFIG.CFG
	gPcvarLevel = register_cvar("rattler_level", "0")
	gPcvarDmgReturn = register_cvar("rattler_dmgreturn", "0.02")

	// FIRE THE EVENTS TO CREATE THIS SUPERHERO!
	gHeroID = sh_create_hero(gHeroName, gPcvarLevel)
	sh_set_hero_info(gHeroID, "Shockwave Shield", "Create a shockwave shield to deflect more dmg as level increases.")
}
//----------------------------------------------------------------------------------------------
public plugin_precache() {
	gSpriteLightning = precache_model("sprites/lgtning.spr")
}
//----------------------------------------------------------------------------------------------
public sh_hero_init(id, heroID, mode) {
	if(gHeroID != heroID) return
	
	gHasRattler[id] = mode ? true : false
	
	sh_debug_message(id, 1, "%s %s", gHeroName, mode ? "ADDED" : "DROPPED")
}
//----------------------------------------------------------------------------------------------
public client_damage(attacker, victim, damage) {
	if(!sh_is_active() || !is_user_connected(victim)) return
	
	if(!gHasRattler[victim]) return
	
	if(is_user_alive(attacker) && !get_user_godmode(attacker) && victim != attacker) {
		new returnDamage = floatround(sh_get_user_lvl(victim) * get_pcvar_float(gPcvarDmgReturn) * damage)
		
		if(returnDamage > 0) {
			sh_extra_damage(attacker, victim, returnDamage, "Shockwave Shield")
			
			static param[5]
			param[0] = random_num(0, 100) // red
			param[1] = random_num(0, 100) // green
			param[2] = random_num(100, 255) // blue
			param[3] = random_num(10, 30) // width
			param[4] = random_num(10, 30) // noise
			
			if(param[0] > param[2]) param[2] = param[0] + 10
			if(param[1] > param[2]) param[2] = param[1] + 10
			if(param[2] > 255) param[2] = 255
			
			message_begin(MSG_BROADCAST, SVC_TEMPENTITY)
			write_byte(8) // TE_BEAMENTS
			write_short(victim) // start entity
			write_short(attacker) // entity
			write_short(gSpriteLightning) // model
			write_byte(0) // starting frame
			write_byte(15) // frame rate
			write_byte(10) // life
			write_byte(param[3]) // line width
			write_byte(param[4]) // noise amplitude
			write_byte(param[0]) // r, g, b
			write_byte(param[1]) // r, g, b
			write_byte(param[2]) // r, g, b
			write_byte(255) // brightness
			write_byte(0) // scroll speed
			message_end()
		}
	}
}