// Uber Gunner! - UberGunner Hero From Outworld, Sent To Kill All Humanity On Earth

/* CVARS - copy and paste to shconfig.cfg

//Uber Gunner
UberGunner_level 4
UberGunner_teamglow 0		//Glow Team Color when player skin in use (0=no 1=yes)
UberGunner_m4a1mult 2.0		//Damage multiplier for his M4A1
UberGunner_health 200		//Default 100 (no extra health)
UberGunner_armor 200		//Default 100
UberGunner_gravity 1.0		//Default 1.0 = no extra gravity (0.50 is 50% normal gravity, ect.)
UberGunner_speed 600		//-1 = no extra speed, this cvar is for all weapons (for faster then normal speed set to 321 or higher)

*/

/*
*   Rip of Master Chief code
*/

#include <superheromod>

// GLOBAL VARIABLES
new gHeroID
new const gHeroName[] = "UberGunner"
new bool:gHasUberGunner[SH_MAXSLOTS+1]
new bool:gMorphed[SH_MAXSLOTS+1]
new gPcvarTeamGlow
new const gUberGunnerSound[] = "items/suitchargeno1.wav"
new const gModelPlayer[] = "models/player/UberGunner/UberGunner.mdl"
new const gModelPlayer_Name[] = "UberGunner"
new const gModel_V_M4A1[] = "models/shmod/UberGunner_v_m4a1.mdl"
//----------------------------------------------------------------------------------------------
public plugin_init() {
	// Plugin Info
	register_plugin("SUPERHERO Uber Gunner", "1.2", "Kebmaster")

	// DO NOT EDIT THIS FILE TO CHANGE CVARS, USE THE SHCONFIG.CFG
	new pcvarLevel = register_cvar("UberGunner_level", "4")
	new pcvarHealth = register_cvar("UberGunner_health", "200")
	new pcvarArmor = register_cvar("UberGunner_armor", "200")
	new pcvarGravity = register_cvar("UberGunner_gravity", "1.0")
	new pcvarSpeed = register_cvar("UberGunner_speed", "600")
	new pcvarM4A1Mult = register_cvar("UberGunner_m4a1mult", "2.0")
	gPcvarTeamGlow = register_cvar("UberGunner_teamglow", "0")

	// FIRE THE EVENT TO CREATE THIS SUPERHERO!
	gHeroID = sh_create_hero(gHeroName, pcvarLevel)
	sh_set_hero_info(gHeroID, "Wild2k", "Become UberGunner - Get an m4a1, which does more dmg.")
	sh_set_hero_hpap(gHeroID, pcvarHealth, pcvarArmor)
	sh_set_hero_grav(gHeroID, pcvarGravity)
	sh_set_hero_speed(gHeroID, pcvarSpeed)
	sh_set_hero_dmgmult(gHeroID, pcvarM4A1Mult, CSW_M4A1)
	sh_set_hero_shield(gHeroID, true)
	
	// REGISTER EVENTS THIS HERO WILL RESPOND TO!
	register_event("CurWeapon", "weapon_change", "be", "1=1")
}
//----------------------------------------------------------------------------------------------
public plugin_precache() {
	precache_sound(gUberGunnerSound)
	precache_model(gModelPlayer)
	precache_model(gModel_V_M4A1)
}
//----------------------------------------------------------------------------------------------
public sh_hero_init(id, heroID, mode) {
	if(gHeroID != heroID) return
	
	if(is_user_alive(id)) {
		switch(mode) {
			case SH_HERO_ADD: {
				sh_give_weapon(id, CSW_M4A1)
				
				if(get_user_weapon(id) == CSW_M4A1) switch_model(id)
				
				UberGunner_tasks(id)
			}
			case SH_HERO_DROP: {
				if(gHasUberGunner[id]) {
					sh_drop_weapon(id, CSW_M4A1, true)
					UberGunner_unmorph(id)
				}
			}
		}
	}
	
	gHasUberGunner[id] = mode ? true : false
	
	sh_debug_message(id, 1, "%s %s", gHeroName, mode ? "ADDED" : "DROPPED")
}
//----------------------------------------------------------------------------------------------
public sh_client_spawn(id) {
	if(!gHasUberGunner[id]) return
	
	sh_give_weapon(id, CSW_M4A1)
	UberGunner_tasks(id)
}
//----------------------------------------------------------------------------------------------
UberGunner_tasks(id) {
	set_task(1.0, "UberGunner_morph", id)
	
	if(get_pcvar_num(gPcvarTeamGlow)) set_task(1.0, "UberGunner_glow", id+200, _, _, "b")
}
//----------------------------------------------------------------------------------------------
public sh_client_death(id) {
	if(!sh_is_active() || is_user_alive(id) || !gHasUberGunner[id]) return
	
	UberGunner_unmorph(id)
}
//----------------------------------------------------------------------------------------------
public weapon_change(id) {
	if(!sh_is_active() || !gHasUberGunner[id]) return
	
	if(read_data(2) != CSW_M4A1) return
	
	switch_model(id)
	
	if(read_data(3) == 0) sh_reload_ammo(id, 0)
}
//----------------------------------------------------------------------------------------------
switch_model(id) {
	if(!sh_is_active() || !is_user_alive(id)) return
	
	set_pev(id, pev_viewmodel2, gModel_V_M4A1)
}
//----------------------------------------------------------------------------------------------
public UberGunner_morph(id) {
	if(gMorphed[id] || !is_user_alive(id) || !gHasUberGunner[id]) return
	
	cs_set_user_model(id, gModelPlayer_Name)
	
	UberGunner_sound(id)
	
	set_hudmessage(50, 205, 50, -1.0, 0.40, 2, 0.02, 4.0, 0.01, 0.1, -1)
	show_hudmessage(id, "UberGunner - Getting Ready 2 Own!")

	gMorphed[id] = true
}
//----------------------------------------------------------------------------------------------
UberGunner_unmorph(id) {
	if(gMorphed[id] && is_user_connected(id)) {
		if(is_user_alive(id)) {
			set_hudmessage(50, 205, 50, -1.0, 0.40, 2, 0.02, 4.0, 0.01, 0.1, -1)
			show_hudmessage(id, "UberGunner - MODE OFF, you returned to normal self.")
		}
		
		cs_reset_user_model(id)
		
		UberGunner_sound(id)

		gMorphed[id] = false

		if(get_pcvar_num(gPcvarTeamGlow)) {
			remove_task(id+200)
			set_user_rendering(id)
		}
	}
}
//----------------------------------------------------------------------------------------------
public UberGunner_sound(id) {
	emit_sound(id, CHAN_AUTO, gUberGunnerSound, 0.2, ATTN_NORM, SND_STOP , PITCH_NORM)
	emit_sound(id, CHAN_AUTO, gUberGunnerSound, 0.2, ATTN_NORM, 0, PITCH_NORM)
}
//----------------------------------------------------------------------------------------------
public UberGunner_glow(id) {
	id -= 200
	
	if(!sh_is_active() || !is_user_connected(id)) {
		remove_task(id+200)
		return
	}
	
	if(gHasUberGunner[id] && is_user_alive(id)) {
		switch(cs_get_user_team(id)) {
			case CS_TEAM_T: sh_set_rendering(id, 100, 0, 0, 16, kRenderFxGlowShell)
			case CS_TEAM_CT: sh_set_rendering(id, 0, 0, 100, 16, kRenderFxGlowShell)
		}
	}
}
//----------------------------------------------------------------------------------------------
public client_connect(id) {
	gMorphed[id] = false
}
//----------------------------------------------------------------------------------------------