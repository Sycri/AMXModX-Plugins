// GOD SLAYER!

/* CVARS - copy and paste to shconfig.cfg

//God Slayer
godslayer_level 8

*/

#include <superheromod>

// GLOBAL VARIABLES
new gHeroID
new const gHeroName[] = "God Slayer"
new bool:gHasGodSlayer[SH_MAXSLOTS+1]
new bool:gCZBotRegisterHam
new bot_quota
//----------------------------------------------------------------------------------------------
public plugin_init() {
	// Plugin Info
	register_plugin("SUPERHERO God Slayer", "1.0", "Sycri")
	
	// DO NOT EDIT THIS FILE TO CHANGE CVARS, USE THE SHCONFIG.CFG
	new pcvarLevel = register_cvar("godslayer_level", "8")
	
	// FIRE THE EVENTS TO CREATE THIS SUPERHERO!
	gHeroID = sh_create_hero(gHeroName, pcvarLevel)
	sh_set_hero_info(gHeroID, "Godmode Removal", "Remove all those godmode shields from your enemies.")
	
	// REGISTER EVENTS THIS HERO WILL RESPOND TO!
	RegisterHam(Ham_TraceAttack, "player", "fw_Player_TraceAttack_Pre")
	
	bot_quota = get_cvar_pointer("bot_quota")
}
//----------------------------------------------------------------------------------------------
public sh_hero_init(id, heroID, mode) {
	if(gHeroID != heroID) return
	
	gHasGodSlayer[id] = mode ? true : false
	
	sh_debug_message(id, 1, "%s %s", gHeroName, mode ? "ADDED" : "DROPPED")
}
//----------------------------------------------------------------------------------------------
public client_putinserver(id) {
	if(id < 1 || id > sh_maxplayers()) return
	
	if(pev(id, pev_flags) & FL_FAKECLIENT && get_pcvar_num(bot_quota) > 0 && !gCZBotRegisterHam) {
		set_task(0.1, "czbotHookHam", id)
	}
}
//----------------------------------------------------------------------------------------------
public czbotHookHam(id) {
	if(gCZBotRegisterHam || !is_user_connected(id)) return
	
	if(pev(id, pev_flags) & FL_FAKECLIENT && get_pcvar_num(bot_quota) > 0) {
		RegisterHamFromEntity(Ham_TraceAttack, id, "fw_Player_TraceAttack_Pre")
		
		gCZBotRegisterHam = true
	}
}
//----------------------------------------------------------------------------------------------
public fw_Player_TraceAttack_Pre(victim, attacker, Float:damage, Float:direction[3], tracehandle, damagebits) {
	if(!sh_is_active() || !is_user_alive(attacker)) return HAM_IGNORED
	
	if(!gHasGodSlayer[attacker] || victim == attacker) return HAM_IGNORED
	
	if(!(damagebits & DMG_BULLET) && !(damagebits & DMG_SLASH)) return HAM_IGNORED
	
	if(get_user_godmode(victim) && (cs_get_user_team(victim) != cs_get_user_team(attacker) || sh_friendlyfire_on())) set_user_godmode(victim, 0)
	
	return HAM_IGNORED
}
//----------------------------------------------------------------------------------------------