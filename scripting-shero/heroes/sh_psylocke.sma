// PSYLOCKE - from the X-men. Betsy Braddock possesses many telepathic abilities.

/* CVARS - copy and paste to shconfig.cfg

//Psylocke
psylocke_level 2

*/

/*
* v1.3 - vittu - 7/31/07
*      - Converted to amxmodx
*      - Optimized code
*
* v1.2 - vittu - 6/22/05
*      - Minor code clean up.
*
* v1.1 - vittu - 3/29/05
*      - Fixed loop to actually check all enemies for the closeset one.
*      - Did usual clean up and removal of useless code.
*
*   Hero Created by StuD|MaN
*/

#include <amxmodx>
#include <amxmisc>
#include <cstrike>
#include <sh_core_main>

#pragma semicolon 1

new gHeroID;
new const gHeroName[] = "Psylocke";

new bool:gHasPsylocke[MAX_PLAYERS + 1];
new gmsgSync;
//----------------------------------------------------------------------------------------------
public plugin_init()
{
	// Plugin Info
	register_plugin("SUPERHERO Psylocke", "1.4", "StuD|MaN");
	
	// DO NOT EDIT THIS FILE TO CHANGE CVARS, USE THE SHCONFIG.CFG
	new pcvarLevel = create_cvar("psylocke_level", "2", .has_min = true, .min_val = 0.0);
	
	// FIRE THE EVENTS TO CREATE THIS SUPERHERO!
	gHeroID = sh_create_hero(gHeroName, pcvarLevel);
	sh_set_hero_info(gHeroID, "Psychic Detection", "Recieve a Telepathic Warning when an Enemy is near");
	
	// LOOP
	set_task_ex(0.1, "@Task_PsylockeLoop", _, _, _, SetTask_Repeat);
	
	gmsgSync = CreateHudSyncObj();
}
//----------------------------------------------------------------------------------------------
public sh_hero_init(id, heroID, mode)
{
	if (gHeroID != heroID)
		return;
	
	gHasPsylocke[id] = mode ? true : false;
	
	sh_debug_message(id, 1, "%s %s", gHeroName, mode ? "ADDED" : "DROPPED");
}
//----------------------------------------------------------------------------------------------
@Task_PsylockeLoop()
{
	if (!sh_is_active() || !sh_is_inround())
		return;
	
	static players[MAX_PLAYERS], playerCount, player, i, e, enemy, closestEnemy;
	static playerOrigin[3], enemyOrigin[3];
	static CsTeams:playerTeam;
	
	get_players_ex(players, playerCount, GetPlayers_ExcludeDead | GetPlayers_ExcludeHLTV);
	
	for (i = 0; i < playerCount; i++) {
		player = players[i];

		if (is_user_bot(player) || !gHasPsylocke[player])
			continue;
		
		playerTeam = cs_get_user_team(player);
		get_user_origin(player, playerOrigin);
		
		closestEnemy = 1201;
		
		for (e = 0; e < playerCount; e++) {
			enemy = players[e];

			if (playerTeam == cs_get_user_team(enemy))
				continue;
			
			get_user_origin(enemy, enemyOrigin);
			
			closestEnemy = min(closestEnemy, get_distance(enemyOrigin, playerOrigin));
		}
		
		if (closestEnemy == 1201)
			continue;
		
		switch (floatround(closestEnemy * 0.0254)) {
			case 0..10: show_message(player, {255, 0, 0}, "DANGER!  Enemy Detected Within 10 Meters!!!");
			case 11..20: show_message(player, {255, 155, 0}, "WARNING! Enemy Detected Within 20 Meters!!");
			case 21..30: show_message(player, {255, 255, 255}, "CAUTION!  Enemy Detected Within 30 Meters!");
		}
	}
}
//----------------------------------------------------------------------------------------------
show_message(index, rgb[3], message[])
{
	set_hudmessage(rgb[0], rgb[1], rgb[2], 0.01, 0.27, 1, 6.0, 0.5, 0.1, 0.1, -1);
	ShowSyncHudMsg(index, gmsgSync, message);
}
//----------------------------------------------------------------------------------------------
