// WOLVERINE!

/* CVARS - copy and paste to shconfig.cfg

//Wolverine
wolv_level 0
wolv_healpoints 3			//The # of HP healed per second
wolv_knifespeed 290			//Speed of wolveine when holding knife
wolv_knifemult 1.35			//Multiplier for knife damage

*/

// v1.17 - JTP - fixed runtime error on damage event if user is already dead
// v1.17.5 - JTP - Added code to allow you to regen to your max heatlh

//---------- User Changeable Defines --------//


// Comment out to force not using the model, will result in a very small reduction in code/checks
// Note: If you change anything here from default setting you must recompile the plugin
#define USE_WEAPON_MODEL


//------- Do not edit below this point ------//

#include <amxmodx>
#include <amxmisc>
#include <sh_core_main>
#include <sh_core_hpap>
#include <sh_core_speed>
#include <sh_core_weapons>

#if defined USE_WEAPON_MODEL
	#include <sh_core_models>
#endif

#pragma semicolon 1

// GLOBAL VARIABLES
new gHeroID;
new const gHeroName[] = "Wolverine";

new bool:gHasWolverine[MAX_PLAYERS + 1];

new CvarHealPoints;

#if defined USE_WEAPON_MODEL
	new const gModel_V_Knife[] = "models/shmod/wolv_knife.mdl";
	new bool:gModelLoaded;
#endif
//----------------------------------------------------------------------------------------------
public plugin_init()
{
	// Plugin Info
	register_plugin("SUPERHERO Wolverine", SH_VERSION_STR, "{HOJ}Batman/JTP10181");

	// DO NOT EDIT THIS FILE TO CHANGE CVARS, USE THE SHCONFIG.CFG
	new pcvarLevel = create_cvar("wolv_level", "0", .has_min = true, .min_val = 0.0);
	new pcvarSpeed = create_cvar("wolv_knifespeed", "290");
	new pcvarKnifeMult = create_cvar("wolv_knifemult", "1.35");
	bind_pcvar_num(create_cvar("wolv_healpoints", "3", .has_min = true, .min_val = 0.0), CvarHealPoints);

	// FIRE THE EVENT TO CREATE THIS SUPERHERO!
	gHeroID = sh_create_hero(gHeroName, pcvarLevel);
	sh_set_hero_info(gHeroID, "Auto-Heal & Claws", "Auto-Heal, Extra Knife Damage and Speed Boost");
	sh_set_hero_speed(gHeroID, pcvarSpeed, 1 << CSW_KNIFE);
	sh_set_hero_dmgmult(gHeroID, pcvarKnifeMult, CSW_KNIFE);
#if defined USE_WEAPON_MODEL
	if (gModelLoaded)
		sh_set_hero_viewmodel(gHeroID, gModel_V_Knife, CSW_KNIFE);
#endif

	// HEAL LOOP
	set_task_ex(1.0, "@Task_WolvLoop", _, _, _, SetTask_Repeat);
}
//----------------------------------------------------------------------------------------------
#if defined USE_WEAPON_MODEL
public plugin_precache()
{
	// Method servers 2 purposes, moron check and optional way to not use the model
	if (file_exists(gModel_V_Knife)) {
		precache_model(gModel_V_Knife);
		gModelLoaded = true;
	} else {
		sh_debug_message(0, 0, "Aborted loading ^"%s^", file does not exist on server", gModel_V_Knife);
		gModelLoaded = false;
	}
}
#endif
//----------------------------------------------------------------------------------------------
public sh_hero_init(id, heroID, mode)
{
	if (gHeroID != heroID)
		return;

	gHasWolverine[id] = mode ? true : false;

	sh_debug_message(id, 1, "%s %s", gHeroName, mode ? "ADDED" : "DROPPED");
}
//----------------------------------------------------------------------------------------------
@Task_WolvLoop()
{
	if (!sh_is_active())
		return;

	static players[MAX_PLAYERS], playerCount, player, i;
	get_players_ex(players, playerCount, GetPlayers_ExcludeDead | GetPlayers_ExcludeHLTV);

	for (i = 0; i < playerCount; ++i) {
		player = players[i];

		if (gHasWolverine[player])
			sh_add_hp(player, CvarHealPoints);
	}
}
//----------------------------------------------------------------------------------------------
