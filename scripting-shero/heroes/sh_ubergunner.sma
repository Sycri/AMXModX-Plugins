// Uber Gunner! - UberGunner Hero From Outworld, Sent To Kill All Humanity On Earth

/* CVARS - copy and paste to shconfig.cfg

//Uber Gunner
UberGunner_level 4
UberGunner_m4a1mult 2.0		//Damage multiplier for his M4A1
UberGunner_health 200		//Default 100 (no extra health)
UberGunner_armor 200		//Default 100
UberGunner_gravity 1.0		//Default 1.0 = no extra gravity (0.50 is 50% normal gravity, ect.)
UberGunner_speed 600		//-1 = no extra speed, this cvar is for all weapons (for faster then normal speed set to 321 or higher)
UberGunner_rldmode 0		//Endless ammo mode: 0-server default, 1-no reload, 2-reload, 3-drop wpn
// Below only used if USE_PLAYER_MODEL is defined
UberGunner_teamglow 1		//Glow in a color based on player's team when hero in use (0=no 1=yes)

*/

//---------- User Changeable Defines --------//


// Comment out to not use the UberGunner player model
#define USE_PLAYER_MODEL

// Comment out to not use the M4A1 model
#define USE_WEAPON_MODEL

// Comment out to not give a free M4A1
#define GIVE_WEAPON


//------- Do not edit below this point ------//

#include <amxmodx>
#include <amxmisc>
#include <fakemeta>
#include <cstrike>
#include <hamsandwich>
#include <sh_core_main>
#include <sh_core_hpap>
#include <sh_core_speed>
#include <sh_core_gravity>
#include <sh_core_weapons>

#if defined GIVE_WEAPON
	#include <sh_core_shieldrestrict>
#endif

#pragma semicolon 1

// GLOBAL VARIABLES
new gHeroID;
new const gHeroName[] = "UberGunner";

new bool:gHasUberGunner[MAX_PLAYERS + 1];
new gmsgSync;

new CvarReloadMode;

#if defined USE_PLAYER_MODEL
	new bool:gModelPlayerSet[MAX_PLAYERS + 1];
	new bool:gModelPlayerLoaded;
	new const gUberGunnerSound[] = "items/suitchargeno1.wav";
	new const gModelPlayer[] = "models/player/UberGunner/UberGunner.mdl";
	new const gModelPlayer_Name[] = "UberGunner";
	new CvarTeamGlow;
#endif

#if defined USE_WEAPON_MODEL
	new const gModel_V_M4A1[] = "models/shmod/UberGunner_v_m4a1.mdl";
	new bool:gModelWeaponLoaded;
#endif
//----------------------------------------------------------------------------------------------
public plugin_init()
{
	// Plugin Info
	register_plugin("SUPERHERO Uber Gunner", "1.2", "Kebmaster");

	// DO NOT EDIT THIS FILE TO CHANGE CVARS, USE THE SHCONFIG.CFG
	new pcvarLevel = create_cvar("UberGunner_level", "4", .has_min = true, .min_val = 0.0);
	new pcvarHealth = create_cvar("UberGunner_health", "200");
	new pcvarArmor = create_cvar("UberGunner_armor", "200");
	new pcvarGravity = create_cvar("UberGunner_gravity", "1.0");
	new pcvarSpeed = create_cvar("UberGunner_speed", "600");
	new pcvarM4A1Mult = create_cvar("UberGunner_m4a1mult", "2.0");
	bind_pcvar_num(create_cvar("UberGunner_rldmode", "0"), CvarReloadMode);

#if defined USE_PLAYER_MODEL
	bind_pcvar_num(create_cvar("UberGunner_teamglow", "1"), CvarTeamGlow);
#endif

	// FIRE THE EVENT TO CREATE THIS SUPERHERO!
	gHeroID = sh_create_hero(gHeroName, pcvarLevel);
	sh_set_hero_info(gHeroID, "Wild2k", "Become UberGunner - Get an M4A1, which does more dmg");
	sh_set_hero_hpap(gHeroID, pcvarHealth, pcvarArmor);
	sh_set_hero_speed(gHeroID, pcvarSpeed);
	sh_set_hero_grav(gHeroID, pcvarGravity);
	sh_set_hero_dmgmult(gHeroID, pcvarM4A1Mult, CSW_M4A1);

#if defined GIVE_WEAPON
	sh_set_hero_shield(gHeroID, true);
#endif
	
	// REGISTER EVENTS THIS HERO WILL RESPOND TO!
	// read_data(2) == CSW_M4A1 = 2=22
	register_event_ex("CurWeapon", "@Event_CurWeapon", RegisterEvent_Single | RegisterEvent_OnlyAlive, "1=1", "2=22", "3=0");
#if defined USE_WEAPON_MODEL
	if (gModelWeaponLoaded)
		RegisterHam(Ham_Item_Deploy, "weapon_m4a1", "@Forward_M4A1_Deploy_Post", 1);
#endif

	// GLOW LOOP
#if defined USE_PLAYER_MODEL
	set_task_ex(1.0, "@Task_GlowLoop", _, _, _, SetTask_Repeat);
#endif

	gmsgSync = CreateHudSyncObj();
}
//----------------------------------------------------------------------------------------------
#if defined USE_PLAYER_MODEL || defined USE_WEAPON_MODEL
public plugin_precache()
{
#if defined USE_PLAYER_MODEL
	precache_sound(gUberGunnerSound);
	
	gModelPlayerLoaded = true;
	if(file_exists(gModelPlayer)) {
		precache_model(gModelPlayer);
	} else {
		sh_debug_message(0, 0, "Aborted loading ^"%s^", file does not exist on server", gModelPlayer);
		gModelPlayerLoaded = false;
	}
#endif

#if defined USE_WEAPON_MODEL
	gModelWeaponLoaded = true;
	if(file_exists(gModel_V_M4A1)) {
		precache_model(gModel_V_M4A1);
	} else {
		sh_debug_message(0, 0, "Aborted loading ^"%s^", file does not exist on server", gModel_V_M4A1);
		gModelWeaponLoaded = false;
	}
#endif
}
#endif
//----------------------------------------------------------------------------------------------
public sh_hero_init(id, heroID, mode)
{
	if (gHeroID != heroID)
		return;
	
	switch(mode) {
		case SH_HERO_ADD: {
			gHasUberGunner[id] = true;
#if defined GIVE_WEAPON
			sh_give_weapon(id, CSW_M4A1);
#endif

#if defined USE_WEAPON_MODEL
			if (gModelWeaponLoaded && get_user_weapon(id) == CSW_M4A1)
				switch_model(id);
#endif
			
#if defined USE_PLAYER_MODEL
			if (gModelPlayerLoaded)
				set_task(1.0, "@Task_Morph", id);
#endif
		}
		case SH_HERO_DROP: {
			gHasUberGunner[id] = false;

#if defined GIVE_WEAPON
			sh_drop_weapon(id, CSW_M4A1, true);
#endif

#if defined USE_PLAYER_MODEL
			if (gModelPlayerLoaded)
				ubergunner_unmorph(id);
#endif
		}
	}
	
	sh_debug_message(id, 1, "%s %s", gHeroName, mode ? "ADDED" : "DROPPED");
}
//----------------------------------------------------------------------------------------------
#if defined USE_PLAYER_MODEL || defined GIVE_WEAPON
public sh_client_spawn(id)
{
	if (!gHasUberGunner[id])
		return;

#if defined GIVE_WEAPON
	sh_give_weapon(id, CSW_M4A1);
#endif

#if defined USE_PLAYER_MODEL
	if (gModelPlayerLoaded)
		set_task(1.0, "@Task_Morph", id);
#endif
}
#endif
//----------------------------------------------------------------------------------------------
@Event_CurWeapon(id)
{
	if (!sh_is_active() || !gHasUberGunner[id])
		return;
	
	sh_reload_ammo(id, CvarReloadMode);
}
//----------------------------------------------------------------------------------------------
#if defined USE_WEAPON_MODEL
@Forward_M4A1_Deploy_Post(weapon_ent)
{
	if (!sh_is_active())
		return;

	// Get weapon's owner
	new owner = fm_cs_get_weapon_ent_owner(weapon_ent);
	
	switch_model(owner);
}
//----------------------------------------------------------------------------------------------
switch_model(index)
{
	if (!is_user_alive(index) || !gHasUberGunner[index])
		return;
	
	set_pev(index, pev_viewmodel2, gModel_V_M4A1);
}
//----------------------------------------------------------------------------------------------
stock fm_cs_get_weapon_ent_owner(ent)
{
	// Prevent server crash if entity's private data not initalized
	if (pev_valid(ent) != 2)
		return -1;
	
	return get_ent_data_entity(ent, "CBasePlayerItem", "m_pPlayer");
}
#endif
//----------------------------------------------------------------------------------------------
#if defined USE_PLAYER_MODEL
public client_disconnected(id)
{
	gModelPlayerSet[id] = false;
}
//----------------------------------------------------------------------------------------------
public sh_client_death(id)
{
	if (is_user_alive(id) || !gHasUberGunner[id])
		return;
	
	ubergunner_unmorph(id);
}
//----------------------------------------------------------------------------------------------
@Task_Morph(id)
{
	if (gModelPlayerSet[id] || !is_user_alive(id) || !gHasUberGunner[id])
		return;
	
	cs_set_user_model(id, gModelPlayer_Name);
	
	ubergunner_sound(id);
	
	set_hudmessage(50, 205, 50, -1.0, 0.40, 2, 0.02, 4.0, 0.01, 0.1, -1);
	ShowSyncHudMsg(id, gmsgSync, "UberGunner - Getting Ready 2 Own!");

	gModelPlayerSet[id] = true;
}
//----------------------------------------------------------------------------------------------
ubergunner_unmorph(index)
{
	if (gModelPlayerSet[index] && is_user_connected(index)) {
		if(is_user_alive(index)) {
			set_hudmessage(50, 205, 50, -1.0, 0.40, 2, 0.02, 4.0, 0.01, 0.1, -1);
			ShowSyncHudMsg(index, gmsgSync, "UberGunner - MODE OFF, you returned to normal self.");
		}
		
		cs_reset_user_model(index);
		
		ubergunner_sound(index);

		gModelPlayerSet[index] = false;

		if (CvarTeamGlow)
			sh_set_rendering(index);
	}
}
//----------------------------------------------------------------------------------------------
ubergunner_sound(index)
{
	emit_sound(index, CHAN_AUTO, gUberGunnerSound, 0.2, ATTN_NORM, SND_STOP , PITCH_NORM);
	emit_sound(index, CHAN_AUTO, gUberGunnerSound, 0.2, ATTN_NORM, 0, PITCH_NORM);
}
//----------------------------------------------------------------------------------------------
@Task_GlowLoop()
{
	if (!sh_is_active() || !CvarTeamGlow)
		return;

	static players[MAX_PLAYERS], playerCount, player, i;
	get_players_ex(players, playerCount, GetPlayers_ExcludeDead | GetPlayers_ExcludeHLTV);

	for (i = 0; i < playerCount; ++i) {
		player = players[i];

		if (gHasUberGunner[player]) {
			switch (cs_get_user_team(player)) {
				case CS_TEAM_T: sh_set_rendering(player, 100, 0, 0, 16, kRenderFxGlowShell);
				case CS_TEAM_CT: sh_set_rendering(player, 0, 0, 100, 16, kRenderFxGlowShell);
				default: sh_set_rendering(player, 100, 100, 100, 16, kRenderFxGlowShell);
			}
		}
	}
}
#endif
//----------------------------------------------------------------------------------------------
