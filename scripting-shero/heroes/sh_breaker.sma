// Raak the Breaker - Reduce enemy AP on hit!

/* CVARS - copy and paste to shconfig.cfg

//Raak the Breaker
breaker_level 12
breaker_chance 0.25
breaker_deduct 100
breaker_glow 1

*/

/*

* v1.1 - The Art of War - 26/02/11
*      - Fixed code efficiency, thanks Fr33m@n for suggesting the use of sh_get_weapon_slot instead of separate wpnindex checks!
*      - Fixed possible bug making the hero deduct HP instead of AP if AP was 0, thanks G-Dog! (The bug has never been confirmed for sure)
*/

#include <amxmodx>
#include <cstrike>
#include <sh_core_main>
#include <sh_core_weapons>

#pragma semicolon 1

// GLOBAL VARIABLES
new gHeroID;
new const gHeroName[] = "Raak the Breaker";

new bool:gHasBreaker[MAX_PLAYERS + 1];

new Float:CvarChance;
new CvarDeduct, CvarGlow;
//----------------------------------------------------------------------------------------------
public plugin_init()
{
	// Plugin Info
	register_plugin("SUPERHERO Raak the Breaker", "1.2", "The Art of War");
	
	// DO NOT EDIT THIS FILE TO CHANGE CVARS, USE THE SHCONFIG.CFG
	new pcvarLevel = create_cvar("breaker_level", "12", .has_min = true, .min_val = 0.0);
	bind_pcvar_float(create_cvar("breaker_chance", "0.25"), CvarChance);
	bind_pcvar_num(create_cvar("breaker_deduct", "100"), CvarDeduct);
	bind_pcvar_num(create_cvar("breaker_glow", "1"), CvarGlow);
	
	// FIRE THE EVENTS TO CREATE THIS SUPERHERO!
	gHeroID = sh_create_hero(gHeroName, pcvarLevel);
	sh_set_hero_info(gHeroID, "Reduce Enemy AP on Hit", "You have a chance to reduce the AP of an enemy when you hit them!");
}
//----------------------------------------------------------------------------------------------
public sh_hero_init(id, heroID, mode)
{
	if (gHeroID != heroID)
		return;
	
	gHasBreaker[id] = mode ? true : false;
}
//----------------------------------------------------------------------------------------------
public client_damage(attacker, victim, damage, wpnindex)
{
	if (!sh_is_active() || !is_user_alive(attacker))
		return;
	
	if (!is_user_alive(victim) || victim == attacker)
		return;
	
	static armor, CsArmorType:armortype;
	armor = cs_get_user_armor(victim, armortype);
	
	if (armor == 0)
		return;
	
	if (gHasBreaker[attacker] && random_float(0.01, 1.00) <= CvarChance) {
		new slot = sh_get_weapon_slot(wpnindex);
		
		if (slot == 1 || slot == 2) {
			cs_set_user_armor(victim, max(armor - CvarDeduct, 0), armortype); 
			
			if (CvarGlow) {
				sh_set_rendering(victim, 135, 206, 250, 16, kRenderFxGlowShell);
				
				set_task(1.0, "@Task_Unglow", victim);
			}				
		} 
	} 
}  
//------------------------------------------------------------------------------------------------
@Task_Unglow(id)
{
	sh_set_rendering(id);
}
//------------------------------------------------------------------------------------------------
