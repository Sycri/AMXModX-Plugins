// MASTER CHIEF! - Master Chief Petty Officer John-117 from the game Halo.

/* CVARS - copy and paste to shconfig.cfg

//Master Chief
masterchief_level 0
masterchief_health 100		//Default 100 (no extra health)
masterchief_armor 150		//Default 150
masterchief_gravity 1.0		//Default 1.0 = no extra gravity (0.50 is 50% of normal gravity, ect.)
masterchief_speed -1		//Default -1 = no extra speed, this cvar is for all weapons (for faster then normal speed set to 261 or higher)
masterchief_p90mult 1.3		//Damage multiplyer for his P90
masterchief_rldmode 0		//Endless ammo mode: 0-server default, 1-no reload, 2-reload, 3-drop wpn
// Below only used if PLAYER_MODEL define = 1
masterchief_teamglow 0		//Glow in a color based on player's team when hero in use (0=no 1=yes)

*/

/*
* v1.6 - vittu - 11/19/07
*      - Added use of const requires amxx 1.76d or higher
*      - Added define options for more customization.
*      - Team colored models can be set with define now.
*      - Now verifies models are loaded else does not use them.
*
* v1.5 - vittu - 6/3/06
*      - Updated to amxmodx only, requires amxx 1.75 or higher.
*      - Removed engine for fakemeta only support.
*      - Changed 2 default cvar values.
*      - Added excessive checking plus other minor code changes.
*      - Fixed rare issue with stale varible giving users the hero that shouldn't have it.
*
* v1.4 - vittu - 6/14/05
*      - Minor code clean up.
*      - Lowered glow value so it's not so bright.
*
* v1.3 - vittu - 1/3/05
*      - Fixed up task set for team glow, so as not to interfere
*         with other tasks when it's removed.
*      - This should be the final version for now.
*
* v1.2 - vittu - 12/26/04
*      - Changed 2 default cvars, gravity and speed to avoid bugs.
*      - Changed give weapon time on ResetHUD, to avoid bugs.
*
* v1.1 - vittu - 12/21/04
*      - set a delay to change player model, better for servers with
*         sh_loadimmediate 0.
*
* v1.0 - vittu - 12/20/04
*      - Complete rework of entire code, started from scratch.
*      - Changed player model to automatic rather than a keydown.
*      - Added p_ weapon model (for 3rd person view).
*
*   Concept by Spartan-117 and JASerrano
*   Player and Weapon models by Strykerwolf (aka Alex Wright) & Grenappels
*/


//---------- User Changeable Defines --------//


// 0-no player model
// 1-green master chief model + glow cvar option [Default]
// 2-team colored master chief models t=red ct=blue (Note:Requires models from optional zip)
#define PLAYER_MODEL 2

// Comment out to not use the P90 model
#define USE_WEAPON_MODEL

// Comment out to not give a free P90
#define GIVE_WEAPON


//------- Do not edit below this point ------//

#include <amxmodx>
#include <amxmisc>
#include <fakemeta>
#include <cstrike>
#include <hamsandwich>
#include <sh_core_main>
#include <sh_core_hpap>
#include <sh_core_speed>
#include <sh_core_gravity>
#include <sh_core_weapons>
#include <sh_core_shieldrestrict>

#pragma semicolon 1

// GLOBAL VARIABLES
new gHeroID;
new const gHeroName[] = "Master Chief";

new bool:gHasMasterChief[MAX_PLAYERS + 1];
new gmsgSync;

new CvarReloadMode;

#if PLAYER_MODEL > 0
	new bool:gModelPlayerSet[MAX_PLAYERS + 1];
	new bool:gModelPlayerLoaded;
	new const gMasterChiefSound[] = "items/suitchargeno1.wav";

	#if PLAYER_MODEL == 1
		new const gModelPlayer[] = "models/player/masterchief/masterchief.mdl";
		new const gModelPlayer_Name[] = "masterchief";
		new CvarTeamGlow;
	#elseif PLAYER_MODEL == 2
		new const gModelPlayer_T[] = "models/player/masterchief_t/masterchief_t.mdl";
		new const gModelPlayer_CT[] = "models/player/masterchief_ct/masterchief_ct.mdl";
		new const gModelPlayer_Name[2][] = {
			"masterchief_t",
			"masterchief_ct"
		};
	#endif
#endif

#if defined USE_WEAPON_MODEL
	new const gModel_V_P90[] = "models/shmod/masterchief_v_p90.mdl";
	new const gModel_P_P90[] = "models/shmod/masterchief_p_p90.mdl";
	new bool:gModelWeaponLoaded;
#endif
//----------------------------------------------------------------------------------------------
public plugin_init()
{
	// Plugin Info
	register_plugin("SUPERHERO Master Chief", "1.7", "Spartan-117/vittu");
	
	// DO NOT EDIT THIS FILE TO CHANGE CVARS, USE THE SHCONFIG.CFG
	new pcvarLevel = create_cvar("masterchief_level", "0", .has_min = true, .min_val = 0.0);
	new pcvarHealth = create_cvar("masterchief_health", "100");
	new pcvarArmor = create_cvar("masterchief_armor", "150");
	new pcvarGravity = create_cvar("masterchief_gravity", "1.0");
	new pcvarSpeed = create_cvar("masterchief_speed", "-1");
	new pcvarP90Mult = create_cvar("masterchief_p90mult", "1.3");
	bind_pcvar_num(create_cvar("masterchief_rldmode", "0"), CvarReloadMode);
	
#if PLAYER_MODEL == 1
	bind_pcvar_num(create_cvar("masterchief_teamglow", "0"), CvarTeamGlow);
#endif
	
	// FIRE THE EVENTS TO CREATE THIS SUPERHERO!
	gHeroID = sh_create_hero(gHeroName, pcvarLevel);
	sh_set_hero_info(gHeroID, "SPARTAN project", "Become Master Chief - get a MJOLNIR battlesuit and MA5B Assault Rifle (P90), which does more damage");
	sh_set_hero_hpap(gHeroID, pcvarHealth, pcvarArmor);
	sh_set_hero_speed(gHeroID, pcvarSpeed);
	sh_set_hero_grav(gHeroID, pcvarGravity);
	sh_set_hero_dmgmult(gHeroID, pcvarP90Mult, CSW_P90);

#if defined GIVE_WEAPON
	sh_set_hero_shield(gHeroID, true);
#endif

	// REGISTER EVENTS THIS HERO WILL RESPOND TO!
	// read_data(2) == CSW_P90 = 2=30
	register_event_ex("CurWeapon", "@Event_CurWeapon", RegisterEvent_Single | RegisterEvent_OnlyAlive, "1=1", "2=30", "3=0");
#if defined USE_WEAPON_MODEL
	if (gModelWeaponLoaded)
		RegisterHam(Ham_Item_Deploy, "weapon_p90", "@Forward_P90_Deploy_Post", 1);
#endif

	// GLOW LOOP
#if PLAYER_MODEL == 1
	set_task_ex(1.0, "@Task_GlowLoop", _, _, _, SetTask_Repeat);
#endif

	gmsgSync = CreateHudSyncObj();
}
//----------------------------------------------------------------------------------------------
#if PLAYER_MODEL > 0 || defined USE_WEAPON_MODEL
public plugin_precache()
{
#if PLAYER_MODEL > 0
	precache_sound(gMasterChiefSound);
	gModelPlayerLoaded = true;
	#if PLAYER_MODEL == 1
		if(file_exists(gModelPlayer)) {
			precache_model(gModelPlayer);
		} else {
			sh_debug_message(0, 0, "Aborted loading ^"%s^", file does not exist on server", gModelPlayer);
			gModelPlayerLoaded = false;
		}
	#elseif PLAYER_MODEL == 2
		if(file_exists(gModelPlayer_T)) {
			precache_model(gModelPlayer_T);
		} else {
			sh_debug_message(0, 0, "Aborted loading ^"%s^", file does not exist on server", gModelPlayer_T);
			gModelPlayerLoaded = false;
		}

		if(file_exists(gModelPlayer_CT)) {
			precache_model(gModelPlayer_CT);
		} else {
			sh_debug_message(0, 0, "Aborted loading ^"%s^", file does not exist on server", gModelPlayer_CT);
			gModelPlayerLoaded = false;
		}
	#endif
#endif

#if defined USE_WEAPON_MODEL
	gModelWeaponLoaded = true;
	if(file_exists(gModel_V_P90)) {
		precache_model(gModel_V_P90);
	} else {
		sh_debug_message(0, 0, "Aborted loading ^"%s^", file does not exist on server", gModel_V_P90);
		gModelWeaponLoaded = false;
	}

	if(file_exists(gModel_P_P90)) {
		precache_model(gModel_P_P90);
	} else {
		sh_debug_message(0, 0, "Aborted loading ^"%s^", file does not exist on server", gModel_P_P90);
		gModelWeaponLoaded = false;
	}
#endif
}
#endif
//----------------------------------------------------------------------------------------------
public sh_hero_init(id, heroID, mode)
{
	if (gHeroID != heroID)
		return;
	
	switch (mode) {
		case SH_HERO_ADD: {
			gHasMasterChief[id] = true;
#if defined GIVE_WEAPON
			sh_give_weapon(id, CSW_P90);
#endif

#if defined USE_WEAPON_MODEL
			if (gModelWeaponLoaded && get_user_weapon(id) == CSW_P90)
				switch_model(id);
#endif
				
#if PLAYER_MODEL > 0
			if (gModelPlayerLoaded)
				set_task(1.1, "@Task_Morph", id);
#endif
		}
		case SH_HERO_DROP: {
			gHasMasterChief[id] = false;
#if defined GIVE_WEAPON
			sh_drop_weapon(id, CSW_P90, true);
#endif

#if PLAYER_MODEL > 0
			if (gModelPlayerLoaded)
				masterchief_unmorph(id);
#endif
		}
	}
	
	sh_debug_message(id, 1, "%s %s", gHeroName, mode ? "ADDED" : "DROPPED");
}
//----------------------------------------------------------------------------------------------
#if PLAYER_MODEL > 0 || defined GIVE_WEAPON
public sh_client_spawn(id) {
	if (!gHasMasterChief[id])
		return;
	
#if defined GIVE_WEAPON
	sh_give_weapon(id, CSW_P90);
#endif
	
#if PLAYER_MODEL > 0
	if (gModelPlayerLoaded)
		set_task(1.1, "@Task_Morph", id);
#endif
}
#endif
//----------------------------------------------------------------------------------------------
@Event_CurWeapon(id)
{
	if (!sh_is_active() || !gHasMasterChief[id])
		return;
	
	sh_reload_ammo(id, CvarReloadMode);
}
//----------------------------------------------------------------------------------------------
#if defined USE_WEAPON_MODEL
@Forward_P90_Deploy_Post(weapon_ent)
{
	if (!sh_is_active())
		return;

	// Get weapon's owner
	new owner = fm_cs_get_weapon_ent_owner(weapon_ent);
	
	switch_model(owner);
}
//----------------------------------------------------------------------------------------------
switch_model(index)
{
	if (!is_user_alive(index) || !gHasMasterChief[index])
		return;
	
	set_pev(index, pev_viewmodel2, gModel_V_P90);
	set_pev(index, pev_weaponmodel2, gModel_P_P90);
}
//----------------------------------------------------------------------------------------------
stock fm_cs_get_weapon_ent_owner(ent)
{
	// Prevent server crash if entity's private data not initalized
	if (pev_valid(ent) != 2)
		return -1;
	
	return get_ent_data_entity(ent, "CBasePlayerItem", "m_pPlayer");
}
#endif
//----------------------------------------------------------------------------------------------
#if PLAYER_MODEL > 0
public client_disconnected(id)
{
	gModelPlayerSet[id] = false;
}
//----------------------------------------------------------------------------------------------
public sh_client_death(id)
{
	if (is_user_alive(id) || !gHasMasterChief[id])
		return;
	
	if (gModelPlayerLoaded)
		masterchief_unmorph(id);
}
//----------------------------------------------------------------------------------------------
@Task_Morph(id)
{
	if (gModelPlayerSet[id] || !is_user_alive(id) || !gHasMasterChief[id])
		return;
	
#if PLAYER_MODEL == 1
	cs_set_user_model(id, gModelPlayer_Name);
#elseif PLAYER_MODEL == 2
	switch (cs_get_user_team(id)) {
		case CS_TEAM_T: cs_set_user_model(id, gModelPlayer_Name[0]);
		case CS_TEAM_CT: cs_set_user_model(id, gModelPlayer_Name[1]);
		default: return;
	}
#endif
	
	masterchief_sound(id);
	
	set_hudmessage(50, 205, 50, -1.0, 0.40, 2, 0.02, 4.0, 0.01, 0.1, -1);
	ShowSyncHudMsg(id, gmsgSync, "%s - Spartan-117 reporting for duty", gHeroName);

	gModelPlayerSet[id] = true;
}
//----------------------------------------------------------------------------------------------
masterchief_unmorph(index)
{
	if (gModelPlayerSet[index] && is_user_connected(index)) {
		if (is_user_alive(index)) {
			set_hudmessage(50, 205, 50, -1.0, 0.40, 2, 0.02, 4.0, 0.01, 0.1, -1);
			ShowSyncHudMsg(index, gmsgSync, "%s - MODE OFF, you returned to normal self", gHeroName);
		}
		
		cs_reset_user_model(index);
		
		masterchief_sound(index);
		
		gModelPlayerSet[index] = false;
		
#if PLAYER_MODEL == 1
		if (CvarTeamGlow)
			sh_set_rendering(index);
#endif
	}
}
//----------------------------------------------------------------------------------------------
masterchief_sound(index)
{
	emit_sound(index, CHAN_AUTO, gMasterChiefSound, 0.2, ATTN_NORM, SND_STOP, PITCH_NORM);
	emit_sound(index, CHAN_AUTO, gMasterChiefSound, 0.2, ATTN_NORM, 0, PITCH_NORM);
}
//----------------------------------------------------------------------------------------------
#if PLAYER_MODEL == 1
@Task_GlowLoop()
{
	if (!sh_is_active() || !CvarTeamGlow)
		return;

	static players[MAX_PLAYERS], playerCount, player, i;
	get_players_ex(players, playerCount, GetPlayers_ExcludeDead | GetPlayers_ExcludeHLTV);

	for (i = 0; i < playerCount; ++i) {
		player = players[i];

		if (gHasMasterChief[player]) {
			switch (cs_get_user_team(player)) {
				case CS_TEAM_T: sh_set_rendering(player, 100, 0, 0, 16, kRenderFxGlowShell);
				case CS_TEAM_CT: sh_set_rendering(player, 0, 0, 100, 16, kRenderFxGlowShell);
				default: sh_set_rendering(player, 100, 100, 100, 16, kRenderFxGlowShell);
			}
		}
	}
}
#endif
#endif
//----------------------------------------------------------------------------------------------
